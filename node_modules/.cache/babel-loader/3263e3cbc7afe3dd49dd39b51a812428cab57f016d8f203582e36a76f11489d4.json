{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liora Ferrero\\\\Documents\\\\Weather App\\\\weather-app\\\\src\\\\components\\\\home\\\\weatherPreview\\\\WeatherPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsFavorite, setIsFavorite, selectCurrentCityName, selectCurrentCityKey, selectCurrentCondition, isLoadingCurrentCity, loadCurrentCondition } from '../../../features/currentCity/correntCitySlice';\nimport { formatDate } from '../../../helperFunctions/helpers';\nimport { FiveDays } from './fiveDays/FiveDays';\nimport { addFavorite } from '../../../features/favorites/favoritesSlice';\nimport \"./weatherPreview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherPreview = () => {\n  _s();\n  const cityKey = useSelector(selectCurrentCityKey);\n  const cityName = useSelector(selectCurrentCityName);\n  const currentCondition = useSelector(selectCurrentCondition);\n  const isFavorite = useSelector(selectIsFavorite);\n  const isLoadingCurrentCondition = useSelector(isLoadingCurrentCity);\n  const dispatch = useDispatch();\n  let addFavoriteElment;\n\n  // console.log(cityName);\n\n  useEffect(() => {\n    if (cityKey) {\n      dispatch(loadCurrentCondition({\n        key: cityKey\n      }));\n    }\n  }, [dispatch, cityKey]);\n  if (isLoadingCurrentCondition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loading\",\n        children: \"loading current condition...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this);\n  }\n  const onClickHandler = () => {\n    const favoriteObj = {\n      key: cityKey,\n      name: cityName,\n      current: currentCondition\n    };\n    dispatch(addFavorite(favoriteObj));\n    dispatch(setIsFavorite(true));\n  };\n\n  // console.log(currentCondition);\n  let formattedDate;\n  let currentHour,\n    currentMinutes,\n    weatherText,\n    temperature,\n    unit = '';\n\n  //check if the current city was already rendered, then assign values\n  if (!(Object.keys(currentCondition).length === 0 && currentCondition.constructor === Object)) {\n    weatherText = currentCondition.WeatherText;\n    temperature = currentCondition.Temperature.Metric.Value;\n    unit = currentCondition.Temperature.Metric.Unit;\n    formattedDate = formatDate(currentCondition.LocalObservationDateTime);\n    currentHour = formattedDate.getHours();\n    currentMinutes = formattedDate.getMinutes();\n  }\n  if (isFavorite) {\n    addFavoriteElment = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"favorite-button\",\n      children: \"it is favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this);\n  } else {\n    addFavoriteElment = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"favorite-button\",\n      onClick: onClickHandler,\n      children: \"add to favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"general-weather-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"general-weather-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"current-condition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"city-name\",\n          children: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), addFavoriteElment, /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"weather-text\",\n          children: weatherText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current temperature is : \", temperature, \" \", unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current time is : \", currentHour + \":\" + currentMinutes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"five-days\",\n        children: /*#__PURE__*/_jsxDEV(FiveDays, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherPreview, \"jR4YC65/6BrFUY9re0YNoOFsYcQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = WeatherPreview;\nvar _c;\n$RefreshReg$(_c, \"WeatherPreview\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","selectIsFavorite","setIsFavorite","selectCurrentCityName","selectCurrentCityKey","selectCurrentCondition","isLoadingCurrentCity","loadCurrentCondition","formatDate","FiveDays","addFavorite","WeatherPreview","cityKey","cityName","currentCondition","isFavorite","isLoadingCurrentCondition","dispatch","addFavoriteElment","key","onClickHandler","favoriteObj","name","current","formattedDate","currentHour","currentMinutes","weatherText","temperature","unit","Object","keys","length","constructor","WeatherText","Temperature","Metric","Value","Unit","LocalObservationDateTime","getHours","getMinutes"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/components/home/weatherPreview/WeatherPreview.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectIsFavorite, setIsFavorite, selectCurrentCityName, selectCurrentCityKey, selectCurrentCondition, isLoadingCurrentCity, loadCurrentCondition } from '../../../features/currentCity/correntCitySlice';\r\nimport { formatDate } from '../../../helperFunctions/helpers';\r\nimport { FiveDays } from './fiveDays/FiveDays';\r\nimport { addFavorite } from '../../../features/favorites/favoritesSlice';\r\nimport \"./weatherPreview.css\";\r\n\r\n\r\nexport const WeatherPreview = () => {\r\n\r\n    const cityKey = useSelector(selectCurrentCityKey);\r\n    const cityName = useSelector(selectCurrentCityName);\r\n    const currentCondition = useSelector(selectCurrentCondition);\r\n    const isFavorite = useSelector(selectIsFavorite);\r\n    const isLoadingCurrentCondition = useSelector(isLoadingCurrentCity);\r\n    const dispatch = useDispatch();\r\n    let addFavoriteElment;\r\n\r\n    // console.log(cityName);\r\n\r\n    useEffect(() => {\r\n        if (cityKey) {\r\n            dispatch(loadCurrentCondition({ key: cityKey }));\r\n        }\r\n    }, [dispatch, cityKey]);\r\n\r\n    if (isLoadingCurrentCondition) {\r\n        return (<div id=\"loading-container\">\r\n            <p id=\"loading\">loading current condition...</p>\r\n        </div>);\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        const favoriteObj = {\r\n            key: cityKey,\r\n            name: cityName,\r\n            current: currentCondition\r\n        }\r\n        dispatch(addFavorite(favoriteObj));\r\n        dispatch(setIsFavorite(true));\r\n    }\r\n\r\n    // console.log(currentCondition);\r\n    let formattedDate;\r\n    let currentHour, currentMinutes, weatherText, temperature, unit = '';\r\n\r\n    //check if the current city was already rendered, then assign values\r\n    if (!(Object.keys(currentCondition).length === 0 && currentCondition.constructor === Object)) {\r\n        weatherText = currentCondition.WeatherText;\r\n        temperature = currentCondition.Temperature.Metric.Value;\r\n        unit = currentCondition.Temperature.Metric.Unit;\r\n        formattedDate = formatDate(currentCondition.LocalObservationDateTime);\r\n        currentHour = formattedDate.getHours();\r\n        currentMinutes = formattedDate.getMinutes();\r\n    }\r\n\r\n    if (isFavorite) {\r\n        addFavoriteElment = <div id=\"favorite-button\">it is favorite</div>;\r\n    } else {\r\n        addFavoriteElment = <div id=\"favorite-button\" onClick={onClickHandler}>add to favorites</div>;\r\n    }\r\n\r\n    return (\r\n        <div id=\"general-weather-container\">\r\n            <div className='general-weather-preview'>\r\n                <div id=\"current-condition\">\r\n                    <h2 id=\"city-name\">{cityName}</h2>\r\n                    {addFavoriteElment}\r\n                    <p id=\"weather-text\">{weatherText}</p>\r\n                    <p>Current temperature is : {temperature} {unit}</p>\r\n                    <p>Current time is : {currentHour + \":\" + currentMinutes}</p>\r\n                </div>\r\n                <div id=\"five-days\">\r\n                    <FiveDays />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,sBAAsB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,gDAAgD;AACjN,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,WAAW,QAAQ,4CAA4C;AACxE,OAAO,sBAAsB;AAAC;AAG9B,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEhC,MAAMC,OAAO,GAAGb,WAAW,CAACK,oBAAoB,CAAC;EACjD,MAAMS,QAAQ,GAAGd,WAAW,CAACI,qBAAqB,CAAC;EACnD,MAAMW,gBAAgB,GAAGf,WAAW,CAACM,sBAAsB,CAAC;EAC5D,MAAMU,UAAU,GAAGhB,WAAW,CAACE,gBAAgB,CAAC;EAChD,MAAMe,yBAAyB,GAAGjB,WAAW,CAACO,oBAAoB,CAAC;EACnE,MAAMW,QAAQ,GAAGjB,WAAW,EAAE;EAC9B,IAAIkB,iBAAiB;;EAErB;;EAEApB,SAAS,CAAC,MAAM;IACZ,IAAIc,OAAO,EAAE;MACTK,QAAQ,CAACV,oBAAoB,CAAC;QAAEY,GAAG,EAAEP;MAAQ,CAAC,CAAC,CAAC;IACpD;EACJ,CAAC,EAAE,CAACK,QAAQ,EAAEL,OAAO,CAAC,CAAC;EAEvB,IAAII,yBAAyB,EAAE;IAC3B,oBAAQ;MAAK,EAAE,EAAC,mBAAmB;MAAA,uBAC/B;QAAG,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiC;MAAA;MAAA;MAAA;IAAA,QAC9C;EACV;EAEA,MAAMI,cAAc,GAAG,MAAM;IACzB,MAAMC,WAAW,GAAG;MAChBF,GAAG,EAAEP,OAAO;MACZU,IAAI,EAAET,QAAQ;MACdU,OAAO,EAAET;IACb,CAAC;IACDG,QAAQ,CAACP,WAAW,CAACW,WAAW,CAAC,CAAC;IAClCJ,QAAQ,CAACf,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC,CAAC;;EAED;EACA,IAAIsB,aAAa;EACjB,IAAIC,WAAW;IAAEC,cAAc;IAAEC,WAAW;IAAEC,WAAW;IAAEC,IAAI,GAAG,EAAE;;EAEpE;EACA,IAAI,EAAEC,MAAM,CAACC,IAAI,CAACjB,gBAAgB,CAAC,CAACkB,MAAM,KAAK,CAAC,IAAIlB,gBAAgB,CAACmB,WAAW,KAAKH,MAAM,CAAC,EAAE;IAC1FH,WAAW,GAAGb,gBAAgB,CAACoB,WAAW;IAC1CN,WAAW,GAAGd,gBAAgB,CAACqB,WAAW,CAACC,MAAM,CAACC,KAAK;IACvDR,IAAI,GAAGf,gBAAgB,CAACqB,WAAW,CAACC,MAAM,CAACE,IAAI;IAC/Cd,aAAa,GAAGhB,UAAU,CAACM,gBAAgB,CAACyB,wBAAwB,CAAC;IACrEd,WAAW,GAAGD,aAAa,CAACgB,QAAQ,EAAE;IACtCd,cAAc,GAAGF,aAAa,CAACiB,UAAU,EAAE;EAC/C;EAEA,IAAI1B,UAAU,EAAE;IACZG,iBAAiB,gBAAG;MAAK,EAAE,EAAC,iBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EACtE,CAAC,MAAM;IACHA,iBAAiB,gBAAG;MAAK,EAAE,EAAC,iBAAiB;MAAC,OAAO,EAAEE,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EACjG;EAEA,oBACI;IAAK,EAAE,EAAC,2BAA2B;IAAA,uBAC/B;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBACpC;QAAK,EAAE,EAAC,mBAAmB;QAAA,wBACvB;UAAI,EAAE,EAAC,WAAW;UAAA,UAAEP;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,EACjCK,iBAAiB,eAClB;UAAG,EAAE,EAAC,cAAc;UAAA,UAAES;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK,eACtC;UAAA,wCAA6BC,WAAW,OAAGC,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACpD;UAAA,iCAAsBJ,WAAW,GAAG,GAAG,GAAGC,cAAc;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,EAAE,EAAC,WAAW;QAAA,uBACf,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAId,CAAC;AAAA,GAxEYf,cAAc;EAAA,QAEPZ,WAAW,EACVA,WAAW,EACHA,WAAW,EACjBA,WAAW,EACIA,WAAW,EAC5BC,WAAW;AAAA;AAAA,KAPnBW,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}