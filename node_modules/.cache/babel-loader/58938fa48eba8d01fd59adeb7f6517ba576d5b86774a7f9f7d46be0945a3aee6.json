{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liora Ferrero\\\\Documents\\\\Weather App\\\\weather-app\\\\src\\\\components\\\\home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAllPreviews, selectFilteredAllPreviews, isLoading } from '../../features/posts/postPreviewsSlice';\nimport { selectFilter } from '../../features/filter/filterSlice';\nimport \"./PostPreviews.css\";\nimport { useParams } from 'react-router-dom';\nimport { selectSearchTerm } from '../../features/search/searchSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  let {\n    subreddit\n  } = useParams();\n  subreddit = \"r/\" + subreddit;\n  const dispatch = useDispatch();\n  const postPreviews = useSelector(selectFilteredAllPreviews);\n  const newFilter = useSelector(selectFilter);\n  const searchTerm = useSelector(selectSearchTerm);\n  const isLoadingPreviews = useSelector(isLoading);\n  if (!subreddit) {\n    subreddit = \"r/popular\";\n  }\n  ;\n  console.log(subreddit);\n  useEffect(() => {\n    dispatch(loadAllPreviews({\n      subreddit: subreddit,\n      filter: newFilter\n    }));\n    console.log(newFilter + \" in UseEffect\");\n  }, [dispatch, newFilter, subreddit, searchTerm]);\n  console.log(isLoadingPreviews);\n  console.log(postPreviews);\n  if (isLoadingPreviews) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loading\",\n        children: \"loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"posts-container\",\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"285W5Ndp9Ma7p+vPrzdMFnK1cP4=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","loadAllPreviews","selectFilteredAllPreviews","isLoading","selectFilter","useParams","selectSearchTerm","Home","subreddit","dispatch","postPreviews","newFilter","searchTerm","isLoadingPreviews","console","log","filter"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/components/home/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  loadAllPreviews,\r\n  selectFilteredAllPreviews,\r\n  isLoading\r\n} from '../../features/posts/postPreviewsSlice';\r\nimport { selectFilter } from '../../features/filter/filterSlice';\r\nimport \"./PostPreviews.css\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { selectSearchTerm } from '../../features/search/searchSlice';\r\n\r\nconst Home = () => {\r\n  let { subreddit } = useParams();\r\n  subreddit = \"r/\" + subreddit;\r\n  const dispatch = useDispatch();\r\n  const postPreviews = useSelector(selectFilteredAllPreviews);\r\n  const newFilter = useSelector(selectFilter);\r\n  const searchTerm = useSelector(selectSearchTerm);\r\n  const isLoadingPreviews = useSelector(isLoading);\r\n  if (!subreddit) {\r\n    subreddit = \"r/popular\";\r\n  };\r\n  console.log(subreddit);\r\n  \r\n  useEffect(() => {\r\n    dispatch(loadAllPreviews({subreddit: subreddit, filter: newFilter}));\r\n    console.log(newFilter + \" in UseEffect\");\r\n  }, [dispatch, newFilter, subreddit, searchTerm]);\r\n\r\n  console.log(isLoadingPreviews);\r\n  console.log(postPreviews);\r\n\r\n  if (isLoadingPreviews) {\r\n    return (<div id=\"loading-container\">\r\n        <p id=\"loading\">loading posts...</p>\r\n      </div>);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='posts-container'>\r\n        {/* {postPreviews.map((post) => (\r\n          <div key={post.id}>\r\n            <PostListItem post={post} />\r\n          </div>\r\n        ))} */}\r\n        <Search />\r\n      </section>\r\n    </>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,eAAe,EACfC,yBAAyB,EACzBC,SAAS,QACJ,wCAAwC;AAC/C,SAASC,YAAY,QAAQ,mCAAmC;AAChE,OAAO,oBAAoB;AAC3B,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,mCAAmC;AAAC;AAAA;AAErE,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,IAAI;IAAEC;EAAU,CAAC,GAAGH,SAAS,EAAE;EAC/BG,SAAS,GAAG,IAAI,GAAGA,SAAS;EAC5B,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,YAAY,GAAGV,WAAW,CAACE,yBAAyB,CAAC;EAC3D,MAAMS,SAAS,GAAGX,WAAW,CAACI,YAAY,CAAC;EAC3C,MAAMQ,UAAU,GAAGZ,WAAW,CAACM,gBAAgB,CAAC;EAChD,MAAMO,iBAAiB,GAAGb,WAAW,CAACG,SAAS,CAAC;EAChD,IAAI,CAACK,SAAS,EAAE;IACdA,SAAS,GAAG,WAAW;EACzB;EAAC;EACDM,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;EAEtBV,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACR,eAAe,CAAC;MAACO,SAAS,EAAEA,SAAS;MAAEQ,MAAM,EAAEL;IAAS,CAAC,CAAC,CAAC;IACpEG,OAAO,CAACC,GAAG,CAACJ,SAAS,GAAG,eAAe,CAAC;EAC1C,CAAC,EAAE,CAACF,QAAQ,EAAEE,SAAS,EAAEH,SAAS,EAAEI,UAAU,CAAC,CAAC;EAEhDE,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;EAC9BC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;EAEzB,IAAIG,iBAAiB,EAAE;IACrB,oBAAQ;MAAK,EAAE,EAAC,mBAAmB;MAAA,uBAC/B;QAAG,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QAChC;EACV;EAEA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,iBAAiB;MAAA,uBAMlC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACF,iBACT;AAEP,CAAC;AAAC,GAvCIN,IAAI;EAAA,QACYF,SAAS,EAEZN,WAAW,EACPC,WAAW,EACdA,WAAW,EACVA,WAAW,EACJA,WAAW;AAAA;AAAA,KAPjCO,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}