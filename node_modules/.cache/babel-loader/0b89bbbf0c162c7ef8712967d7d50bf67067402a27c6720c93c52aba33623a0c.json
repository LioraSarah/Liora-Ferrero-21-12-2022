{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getSubredditPosts, getPostComments } from '../../api/accuWeatherFuncs';\nimport { selectSearchTerm } from '../search/searchSlice';\nexport const loadAllPreviews = createAsyncThunk('postPreviews/loadAllPreviews', async payload => {\n  console.log(payload);\n  const posts = await getSubredditPosts(payload);\n  return posts.data.children.map(post => post.data);\n});\nexport const postPreviewsSlice = createSlice({\n  name: 'postPreviews',\n  initialState: {\n    posts: [],\n    isLoadingPostPreviews: false,\n    hasError: false\n  },\n  extraReducers: builder => {\n    builder.addCase(loadAllPreviews.pending, state => {\n      state.isLoadingPostPreviews = true;\n      state.hasError = false;\n    }).addCase(loadAllPreviews.fulfilled, (state, action) => {\n      state.isLoadingPostPreviews = false;\n      state.posts = action.payload;\n    }).addCase(loadAllPreviews.rejected, state => {\n      state.isLoadingPostPreviews = false;\n      state.hasError = true;\n      state.posts = [];\n    });\n  }\n});\nexport const selectFilteredAllPreviews = state => {\n  const allPreviews = selectAllPreviews(state);\n  const searchTerm = selectSearchTerm(state);\n  return allPreviews.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n};\nexport const selectAllPreviews = state => state.postPreviews.posts;\nexport const isLoading = state => state.postPreviews.isLoadingPostPreviews;\nexport default postPreviewsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getSubredditPosts","getPostComments","selectSearchTerm","loadAllPreviews","payload","console","log","posts","data","children","map","post","postPreviewsSlice","name","initialState","isLoadingPostPreviews","hasError","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","selectFilteredAllPreviews","allPreviews","selectAllPreviews","searchTerm","filter","title","toLowerCase","includes","postPreviews","isLoading","reducer"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/features/posts/postPreviewsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getSubredditPosts, getPostComments } from '../../api/accuWeatherFuncs';\r\nimport { selectSearchTerm } from '../search/searchSlice';\r\n\r\nexport const loadAllPreviews = createAsyncThunk(\r\n  'postPreviews/loadAllPreviews',\r\n  async (payload) => {\r\n    console.log(payload);\r\n    const posts = await getSubredditPosts(payload);\r\n    return posts.data.children.map((post) => post.data);\r\n  }\r\n);\r\n\r\nexport const postPreviewsSlice = createSlice({\r\n  name: 'postPreviews',\r\n  initialState: {\r\n    posts: [],\r\n    isLoadingPostPreviews: false,\r\n    hasError: false\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadAllPreviews.pending, (state) => {\r\n        state.isLoadingPostPreviews = true;\r\n        state.hasError = false;\r\n      })\r\n      .addCase(loadAllPreviews.fulfilled, (state, action) => {\r\n        state.isLoadingPostPreviews = false;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(loadAllPreviews.rejected, (state) => {\r\n        state.isLoadingPostPreviews = false;\r\n        state.hasError = true;\r\n        state.posts = [];\r\n      })\r\n  },\r\n});\r\n\r\nexport const selectFilteredAllPreviews = (state) => {\r\n  const allPreviews = selectAllPreviews(state);\r\n  const searchTerm = selectSearchTerm(state);\r\n\r\n  return allPreviews.filter((post) =>\r\n    post.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n};\r\n\r\nexport const selectAllPreviews = (state) => state.postPreviews.posts;\r\n\r\nexport const isLoading = (state) => state.postPreviews.isLoadingPostPreviews;\r\n\r\nexport default postPreviewsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,4BAA4B;AAC/E,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,OAAO,MAAMC,eAAe,GAAGL,gBAAgB,CAC7C,8BAA8B,EAC9B,MAAOM,OAAO,IAAK;EACjBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,MAAMG,KAAK,GAAG,MAAMP,iBAAiB,CAACI,OAAO,CAAC;EAC9C,OAAOG,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,CAAC;AACrD,CAAC,CACF;AAED,OAAO,MAAMI,iBAAiB,GAAGb,WAAW,CAAC;EAC3Cc,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZP,KAAK,EAAE,EAAE;IACTQ,qBAAqB,EAAE,KAAK;IAC5BC,QAAQ,EAAE;EACZ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,eAAe,CAACiB,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACN,qBAAqB,GAAG,IAAI;MAClCM,KAAK,CAACL,QAAQ,GAAG,KAAK;IACxB,CAAC,CAAC,CACDG,OAAO,CAAChB,eAAe,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,qBAAqB,GAAG,KAAK;MACnCM,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAACnB,OAAO;IAC9B,CAAC,CAAC,CACDe,OAAO,CAAChB,eAAe,CAACqB,QAAQ,EAAGH,KAAK,IAAK;MAC5CA,KAAK,CAACN,qBAAqB,GAAG,KAAK;MACnCM,KAAK,CAACL,QAAQ,GAAG,IAAI;MACrBK,KAAK,CAACd,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMkB,yBAAyB,GAAIJ,KAAK,IAAK;EAClD,MAAMK,WAAW,GAAGC,iBAAiB,CAACN,KAAK,CAAC;EAC5C,MAAMO,UAAU,GAAG1B,gBAAgB,CAACmB,KAAK,CAAC;EAE1C,OAAOK,WAAW,CAACG,MAAM,CAAElB,IAAI,IAC7BA,IAAI,CAACmB,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACJ,UAAU,CAACG,WAAW,EAAE,CAAC,CAC5D;AACH,CAAC;AAED,OAAO,MAAMJ,iBAAiB,GAAIN,KAAK,IAAKA,KAAK,CAACY,YAAY,CAAC1B,KAAK;AAEpE,OAAO,MAAM2B,SAAS,GAAIb,KAAK,IAAKA,KAAK,CAACY,YAAY,CAAClB,qBAAqB;AAE5E,eAAeH,iBAAiB,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}