{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liora Ferrero\\\\Documents\\\\Weather App\\\\weather-app\\\\src\\\\components\\\\home\\\\weatherPreview\\\\WeatherPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentCityName, setCurrentCityKey, clearCurrentCityKey, selectCurrentCityKey, selectCurrentCondition, isLoadingCurrentCity, loadCurrentCondition } from '../../../features/currentCity/correntCitySlice';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WeatherPreview = () => {\n  _s();\n  const cityKey = useSelector(selectCurrentCityKey);\n  const cityName = useSelector(selectCurrentCityName);\n  const currentCondition = useSelector(selectCurrentCondition);\n  const dispatch = useDispatch();\n  const isLoadingCurrentCondition = useSelector(isLoadingCurrentCity);\n  console.log(cityName);\n  useEffect(() => {\n    if (cityKey) {\n      dispatch(loadCurrentCondition({\n        key: cityKey\n      }));\n    }\n  }, [dispatch, cityKey]);\n  if (isLoadingCurrentCondition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loading\",\n        children: \"loading current condition...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n  console.log(currentCondition);\n\n  // const onSearchTermChangeHandler = (e) => {\n  //     const userInput = e.target.value;\n  //     dispatch(setSearchTerm(userInput));\n  // };\n\n  // const onClearSearchTermHandler = () => {\n  //     dispatch(clearSearchTerm());\n  // };\n  //const currentTime = Date.parse(currentCondition.LocalObservationDateTime);\n\n  //helper functions\n  const formatDate = date => {\n    const formattedDate = date.slice(0, 19);\n    const currentTime = new Date(formattedDate);\n    const currentHour = currentTime.getHours();\n    const currentMinutes = currentTime.getMinutes();\n    return currentHour + \":\" + currentMinutes;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"current-condition\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentCondition.WeatherText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current temperature is : \", currentCondition.Temperature.Metric.Value, \" \", currentCondition.Temperature.Metric.Unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current time is : \", formatDate(currentCondition.LocalObservationDateTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"five-days\",\n      children: /*#__PURE__*/_jsxDEV(FiveDays, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherPreview, \"WjIP7m8J+gOsu0Vv2pmO0HLFgQs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n_c = WeatherPreview;\nvar _c;\n$RefreshReg$(_c, \"WeatherPreview\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","selectCurrentCityName","setCurrentCityKey","clearCurrentCityKey","selectCurrentCityKey","selectCurrentCondition","isLoadingCurrentCity","loadCurrentCondition","useParams","WeatherPreview","cityKey","cityName","currentCondition","dispatch","isLoadingCurrentCondition","console","log","key","formatDate","date","formattedDate","slice","currentTime","Date","currentHour","getHours","currentMinutes","getMinutes","WeatherText","Temperature","Metric","Value","Unit","LocalObservationDateTime"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/components/home/weatherPreview/WeatherPreview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectCurrentCityName, setCurrentCityKey, clearCurrentCityKey, selectCurrentCityKey, selectCurrentCondition, isLoadingCurrentCity, loadCurrentCondition } from '../../../features/currentCity/correntCitySlice';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const WeatherPreview = () => {\r\n\r\n    const cityKey = useSelector(selectCurrentCityKey);\r\n    const cityName = useSelector(selectCurrentCityName);\r\n    const currentCondition = useSelector(selectCurrentCondition);\r\n    const dispatch = useDispatch();\r\n    const isLoadingCurrentCondition = useSelector(isLoadingCurrentCity);\r\n\r\n    console.log(cityName);\r\n\r\n    useEffect(() => {\r\n        if (cityKey) {\r\n            dispatch(loadCurrentCondition({ key: cityKey }));\r\n        }\r\n    }, [dispatch, cityKey]);\r\n\r\n    if (isLoadingCurrentCondition) {\r\n        return (<div id=\"loading-container\">\r\n            <p id=\"loading\">loading current condition...</p>\r\n        </div>);\r\n    }\r\n\r\n    console.log(currentCondition);\r\n\r\n    // const onSearchTermChangeHandler = (e) => {\r\n    //     const userInput = e.target.value;\r\n    //     dispatch(setSearchTerm(userInput));\r\n    // };\r\n\r\n    // const onClearSearchTermHandler = () => {\r\n    //     dispatch(clearSearchTerm());\r\n    // };\r\n    //const currentTime = Date.parse(currentCondition.LocalObservationDateTime);\r\n    \r\n    //helper functions\r\n    const formatDate = (date) => {\r\n        const formattedDate = date.slice(0, 19);\r\n        const currentTime = new Date(formattedDate);\r\n        const currentHour = currentTime.getHours();\r\n        const currentMinutes = currentTime.getMinutes();\r\n        return currentHour + \":\" + currentMinutes;\r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"current-condition\">\r\n                <h2>{cityName}</h2>\r\n                <p>{currentCondition.WeatherText}</p>\r\n                <p>Current temperature is : {currentCondition.Temperature.Metric.Value} {currentCondition.Temperature.Metric.Unit}</p>\r\n                <p>Current time is : {formatDate(currentCondition.LocalObservationDateTime)}</p>   \r\n            </div>\r\n            <div id=\"five-days\">\r\n                <FiveDays />\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,qBAAqB,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAEC,oBAAoB,EAAEC,sBAAsB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,gDAAgD;AACxN,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAAA;AAI7C,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEhC,MAAMC,OAAO,GAAGX,WAAW,CAACK,oBAAoB,CAAC;EACjD,MAAMO,QAAQ,GAAGZ,WAAW,CAACE,qBAAqB,CAAC;EACnD,MAAMW,gBAAgB,GAAGb,WAAW,CAACM,sBAAsB,CAAC;EAC5D,MAAMQ,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMc,yBAAyB,GAAGf,WAAW,CAACO,oBAAoB,CAAC;EAEnES,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErBb,SAAS,CAAC,MAAM;IACZ,IAAIY,OAAO,EAAE;MACTG,QAAQ,CAACN,oBAAoB,CAAC;QAAEU,GAAG,EAAEP;MAAQ,CAAC,CAAC,CAAC;IACpD;EACJ,CAAC,EAAE,CAACG,QAAQ,EAAEH,OAAO,CAAC,CAAC;EAEvB,IAAII,yBAAyB,EAAE;IAC3B,oBAAQ;MAAK,EAAE,EAAC,mBAAmB;MAAA,uBAC/B;QAAG,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiC;MAAA;MAAA;MAAA;IAAA,QAC9C;EACV;EAEAC,OAAO,CAACC,GAAG,CAACJ,gBAAgB,CAAC;;EAE7B;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA,MAAMM,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,aAAa,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACvC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACH,aAAa,CAAC;IAC3C,MAAMI,WAAW,GAAGF,WAAW,CAACG,QAAQ,EAAE;IAC1C,MAAMC,cAAc,GAAGJ,WAAW,CAACK,UAAU,EAAE;IAC/C,OAAOH,WAAW,GAAG,GAAG,GAAGE,cAAc;EAC7C,CAAC;EAGD,oBACI;IAAA,wBACI;MAAK,EAAE,EAAC,mBAAmB;MAAA,wBACvB;QAAA,UAAKf;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAA,UAAIC,gBAAgB,CAACgB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eACrC;QAAA,wCAA6BhB,gBAAgB,CAACiB,WAAW,CAACC,MAAM,CAACC,KAAK,OAAGnB,gBAAgB,CAACiB,WAAW,CAACC,MAAM,CAACE,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACtH;QAAA,iCAAsBd,UAAU,CAACN,gBAAgB,CAACqB,wBAAwB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9E,eACN;MAAK,EAAE,EAAC,WAAW;MAAA,uBACf,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACV;EAAA,gBACP;AAIX,CAAC;AAAA,GA3DYxB,cAAc;EAAA,QAEPV,WAAW,EACVA,WAAW,EACHA,WAAW,EACnBC,WAAW,EACMD,WAAW;AAAA;AAAA,KANpCU,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}