{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getCurrentCondition } from '../../api/accuWeatherFuncs';\nexport const loadCurrentCondition = createAsyncThunk('currentCity/loadCurrentCondition', async payload => {\n  if (payload) {\n    const CurrentCondition = await getCurrentCondition(payload);\n    return CurrentCondition[0];\n  }\n});\nconst defaultCity = 'Tel Aviv';\nconst defaultCityKey = '215854';\n// const defaultCityCondition = {\n//   \"LocalObservationDateTime\": \"2022-12-21T08:13:00+02:00\",\n//   \"EpochTime\": 1671603180,\n//   \"WeatherText\": \"Partly sunny\",\n//   \"WeatherIcon\": 3,\n//   \"HasPrecipitation\": false,\n//   \"PrecipitationType\": null,\n//   \"IsDayTime\": true,\n//   \"Temperature\": {\n//     \"Metric\": {\n//       \"Value\": 15,\n//       \"Unit\": \"C\",\n//       \"UnitType\": 17\n//     },\n//     \"Imperial\": {\n//       \"Value\": 59,\n//       \"Unit\": \"F\",\n//       \"UnitType\": 18\n//     }\n//   },\n//   \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\n//   \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\n// };\n\nexport const currentCitySlice = createSlice({\n  name: 'currentCity',\n  initialState: {\n    currentCityName: defaultCity,\n    currentCityKey: defaultCityKey,\n    cityCondition: {},\n    isLoadingCurrentCondition: false,\n    hasError: false,\n    isFavorite: false,\n    isMetric: true\n  },\n  reducers: {\n    setCurrentCityKey(state, action) {\n      state.currentCityKey = action.payload;\n    },\n    setCurrentCityName(state, action) {\n      state.currentCityName = action.payload;\n    },\n    setIsFavorite(state, action) {\n      state.isFavorite = action.payload;\n    },\n    setIsMetric(state, action) {\n      state.isMetric = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadCurrentCondition.pending, state => {\n      state.isLoadingCurrentCondition = true;\n      state.hasError = false;\n    }).addCase(loadCurrentCondition.fulfilled, (state, action) => {\n      state.isLoadingCurrentCondition = false;\n      state.cityCondition = action.payload;\n    }).addCase(loadCurrentCondition.rejected, state => {\n      state.isLoadingCurrentCondition = false;\n      state.hasError = true;\n      state.cityCondition = {};\n    });\n  }\n});\n\n//selectors\nexport const selectCurrentCityKey = state => state.currentCity.currentCityKey;\nexport const selectCurrentCityName = state => state.currentCity.currentCityName;\nexport const isLoadingCurrentCity = state => state.currentCity.isLoadingCurrentCondition;\nexport const selectIsFavorite = state => state.currentCity.isFavorite;\nexport const selectCurrentCondition = state => state.currentCity.cityCondition;\nexport const selectIsMetric = state => state.currentCity.isMetric;\n//actions\nexport const {\n  setCurrentCityKey,\n  setCurrentCityName,\n  clearCurrentCityName,\n  setIsFavorite,\n  setIsMetric\n} = currentCitySlice.actions;\n//reducer\nexport default currentCitySlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getCurrentCondition","loadCurrentCondition","payload","CurrentCondition","defaultCity","defaultCityKey","currentCitySlice","name","initialState","currentCityName","currentCityKey","cityCondition","isLoadingCurrentCondition","hasError","isFavorite","isMetric","reducers","setCurrentCityKey","state","action","setCurrentCityName","setIsFavorite","setIsMetric","extraReducers","builder","addCase","pending","fulfilled","rejected","selectCurrentCityKey","currentCity","selectCurrentCityName","isLoadingCurrentCity","selectIsFavorite","selectCurrentCondition","selectIsMetric","clearCurrentCityName","actions","reducer"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/features/currentCity/correntCitySlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getCurrentCondition } from '../../api/accuWeatherFuncs';\r\n\r\nexport const loadCurrentCondition = createAsyncThunk(\r\n  'currentCity/loadCurrentCondition',\r\n  async (payload) => {\r\n    if (payload) {\r\n        const CurrentCondition = await getCurrentCondition(payload);\r\n        return CurrentCondition[0];\r\n    }\r\n  }\r\n);\r\n\r\nconst defaultCity = 'Tel Aviv';\r\nconst defaultCityKey = '215854';\r\n// const defaultCityCondition = {\r\n//   \"LocalObservationDateTime\": \"2022-12-21T08:13:00+02:00\",\r\n//   \"EpochTime\": 1671603180,\r\n//   \"WeatherText\": \"Partly sunny\",\r\n//   \"WeatherIcon\": 3,\r\n//   \"HasPrecipitation\": false,\r\n//   \"PrecipitationType\": null,\r\n//   \"IsDayTime\": true,\r\n//   \"Temperature\": {\r\n//     \"Metric\": {\r\n//       \"Value\": 15,\r\n//       \"Unit\": \"C\",\r\n//       \"UnitType\": 17\r\n//     },\r\n//     \"Imperial\": {\r\n//       \"Value\": 59,\r\n//       \"Unit\": \"F\",\r\n//       \"UnitType\": 18\r\n//     }\r\n//   },\r\n//   \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n//   \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n// };\r\n\r\nexport const currentCitySlice = createSlice({\r\n    name: 'currentCity',\r\n    initialState: {\r\n      currentCityName: defaultCity,\r\n      currentCityKey: defaultCityKey,\r\n      cityCondition: {},\r\n      isLoadingCurrentCondition: false,\r\n      hasError: false,\r\n      isFavorite: false,\r\n      isMetric: true\r\n    },\r\n    reducers: {\r\n        setCurrentCityKey(state, action) {\r\n            state.currentCityKey = action.payload\r\n        },\r\n        setCurrentCityName(state, action) {\r\n            state.currentCityName = action.payload\r\n        },\r\n        setIsFavorite(state, action) {\r\n          state.isFavorite = action.payload;\r\n        },\r\n        setIsMetric(state, action) {\r\n          state.isMetric = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n          .addCase(loadCurrentCondition.pending, (state) => {\r\n            state.isLoadingCurrentCondition = true;\r\n            state.hasError = false;\r\n          })\r\n          .addCase(loadCurrentCondition.fulfilled, (state, action) => {\r\n            state.isLoadingCurrentCondition = false;\r\n            state.cityCondition = action.payload;\r\n          })\r\n          .addCase(loadCurrentCondition.rejected, (state) => {\r\n            state.isLoadingCurrentCondition = false;\r\n            state.hasError = true;\r\n            state.cityCondition = {};\r\n          })\r\n      }\r\n});\r\n\r\n\r\n//selectors\r\nexport const selectCurrentCityKey = (state) => state.currentCity.currentCityKey;\r\nexport const selectCurrentCityName = (state) => state.currentCity.currentCityName;\r\nexport const isLoadingCurrentCity = (state) => state.currentCity.isLoadingCurrentCondition;\r\nexport const selectIsFavorite = (state) => state.currentCity.isFavorite;\r\nexport const selectCurrentCondition = (state) => state.currentCity.cityCondition;\r\nexport const selectIsMetric = (state) => state.currentCity.isMetric;\r\n//actions\r\nexport const {setCurrentCityKey, setCurrentCityName, clearCurrentCityName, setIsFavorite, setIsMetric} = currentCitySlice.actions;\r\n//reducer\r\nexport default currentCitySlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}