{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liora Ferrero\\\\Documents\\\\Weather App\\\\weather-app\\\\src\\\\components\\\\home\\\\Home.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAllPreviews, selectFilteredAllPreviews, isLoading } from '../../features/posts/postPreviewsSlice';\nimport { selectFilter } from '../../features/filter/filterSlice';\nimport \"./PostPreviews.css\";\nimport { useParams } from 'react-router-dom';\nimport { selectSearchTerm, loadAutocomplete } from '../../features/search/searchSlice';\nimport { Search } from './searchBar/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  // // let { subreddit } = useParams();\n  // // subreddit = \"r/\" + subreddit;\n  // const dispatch = useDispatch();\n  // // const postPreviews = useSelector(selectFilteredAllPreviews);\n  // // const newFilter = useSelector(selectFilter);\n  // const searchTerm = useSelector(selectSearchTerm);\n  // const isLoadingPreviews = useSelector(isLoading);\n  // // if (!subreddit) {\n  // //   subreddit = \"r/popular\";\n  // // };\n  // // console.log(subreddit);\n\n  // useEffect(() => {\n  //   dispatch(loadAutocomplete({subreddit: subreddit, filter: newFilter}));\n  //   console.log(newFilter + \" in UseEffect\");\n  // }, [dispatch, newFilter, subreddit, searchTerm]);\n\n  // console.log(isLoadingPreviews);\n  // console.log(postPreviews);\n\n  // if (isLoadingPreviews) {\n  //   return (<div id=\"loading-container\">\n  //       <p id=\"loading\">loading posts...</p>\n  //     </div>);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherPreview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","loadAllPreviews","selectFilteredAllPreviews","isLoading","selectFilter","useParams","selectSearchTerm","loadAutocomplete","Search","Home"],"sources":["C:/Users/Liora Ferrero/Documents/Weather App/weather-app/src/components/home/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  loadAllPreviews,\r\n  selectFilteredAllPreviews,\r\n  isLoading\r\n} from '../../features/posts/postPreviewsSlice';\r\nimport { selectFilter } from '../../features/filter/filterSlice';\r\nimport \"./PostPreviews.css\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { selectSearchTerm, loadAutocomplete } from '../../features/search/searchSlice';\r\nimport { Search } from './searchBar/Search';\r\n\r\nexport const Home = () => {\r\n  // // let { subreddit } = useParams();\r\n  // // subreddit = \"r/\" + subreddit;\r\n  // const dispatch = useDispatch();\r\n  // // const postPreviews = useSelector(selectFilteredAllPreviews);\r\n  // // const newFilter = useSelector(selectFilter);\r\n  // const searchTerm = useSelector(selectSearchTerm);\r\n  // const isLoadingPreviews = useSelector(isLoading);\r\n  // // if (!subreddit) {\r\n  // //   subreddit = \"r/popular\";\r\n  // // };\r\n  // // console.log(subreddit);\r\n  \r\n  // useEffect(() => {\r\n  //   dispatch(loadAutocomplete({subreddit: subreddit, filter: newFilter}));\r\n  //   console.log(newFilter + \" in UseEffect\");\r\n  // }, [dispatch, newFilter, subreddit, searchTerm]);\r\n\r\n  // console.log(isLoadingPreviews);\r\n  // console.log(postPreviews);\r\n\r\n  // if (isLoadingPreviews) {\r\n  //   return (<div id=\"loading-container\">\r\n  //       <p id=\"loading\">loading posts...</p>\r\n  //     </div>);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <section className='posts-container'>\r\n        {/* {postPreviews.map((post) => (\r\n          <div key={post.id}>\r\n            <PostListItem post={post} />\r\n          </div>\r\n        ))} */}\r\n        <Search />\r\n        <WeatherPreview />\r\n      </section>\r\n    </>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,eAAe,EACfC,yBAAyB,EACzBC,SAAS,QACJ,wCAAwC;AAC/C,SAASC,YAAY,QAAQ,mCAAmC;AAChE,OAAO,oBAAoB;AAC3B,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,mCAAmC;AACtF,SAASC,MAAM,QAAQ,oBAAoB;AAAC;AAAA;AAE5C,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,iBAAiB;MAAA,wBAMlC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACV,iBACT;AAEP,CAAC;AAAC,KAxCWA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}